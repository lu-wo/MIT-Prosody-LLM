# @package _global_

# to execute this experiment run:
# python train.py experiment=example

defaults:
  - override /data: prominence_regression.yaml
  - override /model_task: token_tagging_regressor.yaml
  - override /callbacks: prominence_regression.yaml
  - override /logger: many_loggers.yaml
  - override /trainer: gpu.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

tags: ["bert", "prominence", "regression"]

seed: 12345

logger:
  wandb:
    project: helsinki_reg
    entity: prosody
    tags: ["bert", "prominence", "regression"]
    name: "run-${now:%Y-%m-%d_%H-%M-%S}"
    group: "bert" # Add this line to override the 'group' parameter
    log_model: True # Add this line to override the 'log_model' parameter

trainer:
  min_epochs: 1
  max_epochs: 100
  gradient_clip_val: 1

model_task:
  huggingface_model: bert-base-uncased
  num_labels: 1
  optimizer:
    lr: 0.00005
    weight_decay: 0.0001

data:
  model_name: bert-base-uncased
  batch_size: 32
  dataset_name: helsinki_prominence
  score_first_token: True # only score the first token of a word in loss
  relative_to_prev: True # labels are not absolute but relative to n previous words' avg
  n_prev: 1 # number of previous words to compute the avg 

